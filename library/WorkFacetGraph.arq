#QueryScope=General
#QueryReturnType=Graph
#QueryResults=All works whose various literals contain the given L_NAME parameter value, along with their LICENSE + ACCESS + LANGSCRIPT + STATUS facets.
#QueryParams=L_NAME,LG_NAME
#QueryUrl=/lib/workSearchGraph?L_NAME="'od zer"&LG_NAME=bo-x-ewts

#param.L_NAME.type=string
#param.L_NAME.langTag=LG_NAME
#param.L_NAME.isLucene=true
#param.L_NAME.example="ye shes"


CONSTRUCT 
  { 
    ?res adm:license ?lic .  
    ?res adm:status ?st .
    ?res adm:access ?acc .
    ?res bdo:workLangScript ?ls .
    ?res ?pp ?lit .
    ?res skos:prefLabel ?l.
    ?res bdo:workGenre ?g .
    ?res <http://purl.bdrc.io/ontology/core/labelMatch> ?match.
    ?res <http://purl.bdrc.io/ontology/core/taxonomy> ?root
  }
WHERE {
  {
    (?s ?sc ?lit) text:query ( rdfs:label ?L_NAME ). 
    ?res ?p ?s.
    ?s rdf:type ?pp .
    ?res adm:license ?lic.
    ?res adm:status ?st .
    ?res adm:access ?acc .
    ?res bdo:workLangScript ?ls.        
    OPTIONAL {?res skos:prefLabel ?match.
      Filter(str(?match)=str(?lit))}
    } 
  union
  
  { (?res ?sc ?lit) text:query ( skos:altLabel ?L_NAME ). 
    ?res bdo:workPartOf+ ?po .
    ?po adm:license ?lic .
    ?po adm:access ?acc .
    ?res adm:status ?st .
    ?po bdo:workLangScript ?ls.    
    OPTIONAL {?res skos:prefLabel ?match.
      Filter(str(?match)=str(?lit))}
  }
  union
  { (?res ?sc ?lit) text:query ( skos:prefLabel ?L_NAME ). 
    ?res bdo:workPartOf+ ?po .
    ?po adm:license ?lic .
    ?po adm:access ?acc .
    ?po adm:status ?st .
    ?po bdo:workLangScript ?ls.         
    OPTIONAL {?res skos:prefLabel ?match.
      Filter(str(?match)=str(?lit))}
  }
  
  optional{?res bdo:workGenre ?g .}
  ?res skos:prefLabel ?l.
  ?res a :Work
}

