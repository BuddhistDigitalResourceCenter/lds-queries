#QueryScope=General
#QueryReturnType=Graph
#QueryResults=All works whose various literals contain the given L_NAME parameter value, along with their LICENSE + ACCESS + LANGSCRIPT + STATUS facets.
#QueryParams=L_NAME,LG_NAME
#QueryUrl=/lib/workFacetGraph?L_NAME="'od zer"&LG_NAME=bo-x-ewts

#param.L_NAME.type=string
#param.L_NAME.langTag=LG_NAME
#param.L_NAME.isLucene=true
#param.L_NAME.example="ye shes"

PREFIX tmp: <http://purl.bdrc.io/ontology/tmp/>

CONSTRUCT
{
    ?res tmp:status ?st .
    ?res tmp:matchScore ?sc .
    ?res tmp:labelMatch ?labelMatch.

    ?res tmp:nbInstance ?nbinstances .
    ?res tmp:hasOpen ?hasopen .
    ?res tmp:hasImage ?hasimage .
    ?res tmp:hasEtext ?hasetext .
  
    ?res ?resp ?reso .
    ?res ?respp ?resoo .
 
    ?res tmp:author ?author .
    ?agent skos:prefLabel ?agentL .
  
    ?resoo skos:prefLabel ?ol .

}
WHERE 
{
  {
    (?res ?sc ?labelMatch) text:query ( bdo:skosLabels ?L_NAME "highlight:" ) .
    ?res a/rdfs:subClassOf* bdo:Work .
    ?res ?resp ?reso .
    FILTER (?resp = bdo:language || ?resp = skos:altLabel || ?resp = skos:prefLabel || ?resp = rdf:type)
    ?resAdm adm:adminAbout ?res .
    ?resAdm adm:status ?st .
    
  } union {
    
    (?res ?sc ?labelMatch) text:query ( bdo:skosLabels ?L_NAME "highlight:" ) .
    
    ?res bdo:creator ?creator .
    ?creator ?creatorp ?creatoro .
    ?creator bdo:role ?role .
    ?creator bdo:agent ?agent .
    ?agent skos:prefLabel ?agentL .
    
    bind( if(?role = bdr:R0ER0014 || ?role = bdr:R0ER0016 || ?role = bdr:R0ER0019 || ?role = bdr:R0ER0025, ?agent, false) as ?author)

  } union {
    
    (?res ?sc ?labelMatch) text:query ( bdo:skosLabels ?L_NAME "highlight:" ) .
    ?res a/rdfs:subClassOf* bdo:Work .
    
    ?res ?respp ?resoo .
    FILTER(?respp = bdo:workTranslationOf || ?respp = bdo:serialMemberOf  || ?respp = bdo:workIsAbout || ?respp = bdo:workGenre)
    ?resoo skos:prefLabel ?ol .

  } union {
    
    select ?res 
           (sum (?isRootInstance) as ?nbinstances) 
           (count (?instance) as ?nbinstance) 
           (max(?instanceAccessOpen) as ?hasopen) 
           (max(?instanceImage) as ?hasimage) 
           (max(?instanceEtext) as ?hasetext) 
    where {
      
      (?res) text:query ( bdo:skosLabels ?L_NAME) .

      ?res bdo:workHasInstance/bdo:partRoot? ?instance .
      ?instanceAdm adm:adminAbout ?instance .
      ?instanceAdm adm:status bda:StatusReleased .
      bind( if (exists {?instance bdo:instanceReproductionOf ?reprodof}, 0, 1) as ?isRootInstance)
      bind( exists {?instanceAdm adm:access bda:AccessOpen} as ?instanceAccessOpen)
      bind( exists {?instance a bdo:ImageInstance} as ?instanceImage)
      bind( exists {?instance a bdo:EtextInstance} as ?instanceEtext)
    } group by ?res 
  }
}
