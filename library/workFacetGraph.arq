#QueryScope=General
#QueryReturnType=Graph
#QueryResults=All works whose various literals contain the given L_NAME parameter value, along with their LICENSE + ACCESS + LANGSCRIPT + STATUS facets.
#QueryParams=L_NAME,LG_NAME
#QueryUrl=/lib/workFacetGraph?L_NAME="'od zer"&LG_NAME=bo-x-ewts

#param.L_NAME.type=string
#param.L_NAME.langTag=LG_NAME
#param.L_NAME.isLucene=true
#param.L_NAME.example="ye shes"

PREFIX tmp: <http://purl.bdrc.io/ontology/tmp/>

CONSTRUCT
  {
    ?res adm:status ?st .
    ?res a ?type .
    ?res bdo:workIsAbout ?t .
    ?res bdo:workGenre ?g .
    ?res bdo:workIsAbout ?rootT .
    ?res bdo:workGenre ?rootG .
    ?res skos:prefLabel ?l .
    ?res tmp:matchScore ?sc .
    ?res tmp:labelMatch ?labelMatch.
    ?res  bdo:language ?lang .

    ?res bdo:workPartType ?wPT .
    ?res bdo:workHasPart ?wHP .    
    ?res bdo:workHasInstance ?instance .

    ?instance bdo:workHasRoot ?instanceroot .
    ?instance tmp:rootPrefLabel ?instancerootPL .

    ?instance ?instancep ?instanceo .

    ?res tmp:instanceAccess ?instanceAccess .
    ?res tmp:instanceType ?instancetype .

    ?res tmp:author ?author .

    ?res bdo:creator ?creator .
    ?creator ?creatorp ?creatoro .
    ?agent skos:prefLabel ?agentL .

    ?event ?eventp ?evento .

  }
WHERE 
  {
    (?res ?sc ?labelMatch) text:query ( bdo:skosLabels ?L_NAME "highlight:" ) .
    ?res a ?type . 
    ?type rdfs:subClassOf* bdo:Work .
    
    optional { ?res bdo:workGenre ?g . optional { ?g ^:taxHasSubClass+ ?rootG . } . }
    optional { ?res bdo:workIsAbout ?t . ?t a :Topic . optional { ?t ^:taxHasSubClass+ ?rootT . } . }

    ?res ?resp ?reso .

    optional {
      ?resAdm adm:adminAbout ?res ;
              adm:status ?st .
    }

    # TODO: add years or quarter centuries associated with work

    optional {
        ?res bdo:creator ?creator .
        ?creator ?creatorp ?creatoro .
        ?creator bdo:agent ?agent .
        ?agent skos:prefLabel ?agentL .
    }

    optional {
        ?res bdo:creator ?acreator .
        ?acreator bdo:role ?role .
        FILTER(?role = bdr:R0ER0014 || ?role = bdr:R0ER0016 || ?role = bdr:R0ER0019 || ?role = bdr:R0ER0025)
        ?acreator bdo:agent ?author .
    }

    optional {
        ?res bdo:workEvent ?event .
        ?event ?eventp ?evento .
    }

    optional {
      ?res :workHasInstance ?instance .
      ?instanceAdm adm:adminAbout ?instance .
      ?instanceAdm adm:access ?instanceAccess .
      ?instance ?instancep ?instanceo .
      ?instance a ?instancetype .
      optional {
        ?instance bdo:workPartOf+ ?instanceroot .
        ?instanceroot :isRoot true ;
                      skos:prefLabel ?instancerootPL .
      }
    } .
  }
