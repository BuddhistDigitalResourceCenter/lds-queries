#QueryScope=General
#QueryReturnType=Graph
#QueryResults=All instances linked to the work, 
#QueryParams=R_RES
#QueryUrl=/lib/workInstance?R_RES=bdr:W0RTT3216

#param.R_RES.type=URI
#param.R_RES.subtype=bdo:Work
#param.R_RES.desc=the work on which we want to list the instances

PREFIX tmp: <http://purl.bdrc.io/ontology/tmp/>

CONSTRUCT {

    ?instance tmp:yearStart ?yearStart .
    ?instance tmp:yearEnd ?yearEnd .
	?instance tmp:isMain true .
	?instance tmp:status ?status .
	?instance tmp:provider ?provider .
	?instance tmp:originalRecord ?originalRecord .
	?instance ?instancep ?instanceo .
	?instance :inRootInstance ?instanceR .
	?instanceR skos:prefLabel ?instanceRl .
	?instance ?instanceRp ?instanceRo .
	?instance ?instancep ?instanceo .

    ?instance tmp:hasOpen ?hasopen .
    ?instance tmp:hasImage ?hasimage .
    ?instance tmp:hasEtext ?hasetext .

} where {

    {

		?R_RES :workHasInstance ?instance .
		FILTER ( NOT EXISTS {?instance :instanceReproductionOf ?reprof })
		?instanceAdm adm:adminAbout ?instance .
		?instanceAdm adm:status ?status .
		?instanceAdm adm:metadataLegal/adm:provider ?provider .

		?instance ?instancep ?instanceo .
		FILTER (?instancep != bdo:note && ?instancep != bdo:workEvent && ?instancep != bdo:workTitle)

    } union {
	    
	    ?R_RES :workHasInstance ?instance .
	    ?instance :inRootInstance ?instanceR .
		?instanceRAdm adm:adminAbout ?instanceR .
		?instanceRAdm adm:status ?status .
		?instanceRAdm adm:metadataLegal/adm:provider ?provider .

		?instanceR skos:prefLabel ?instanceRl .
		?instanceR ?instanceRp ?instanceRo .
		FILTER (?instanceRp = bdo:script || ?instanceRp = bdo:printMethod || ?instanceRp = bdo:publisherLocation || ?instanceRp = bdo:publisherName)

		?instance ?instancep ?instanceo .
		FILTER (?instancep != bdo:note && ?instancep != bdo:instanceEvent && ?instancep != bdo:hasTitle)

	} union {

		?R_RES :workHasInstance ?instance .
		?instance :inRootInstance? ?instanceR .
		?instanceR :instanceEvent ?evt .
		?evt ?evtp ?evto .
		BIND (IF(?evtp = bdo:onYear || ?evtp = bdo:notBefore, ?evto, 1/0) as ?yearStart)
        BIND (IF(?evtp = bdo:notAfter, ?evto, 1/0) as ?yearEnd)
    
    } union {

		select ?instance 
	           (max(?instanceAccessOpen) as ?hasopen) 
	           (max(?instanceImage) as ?hasimage) 
	           (max(?instanceEtext) as ?hasetext) 
	    where {
	      
	      ?R_RES :workHasInstance ?instance .
	      FILTER ( NOT EXISTS {?instance :instanceReproductionOf ?reprof })
		  ?instance :inRootInstance?/:instanceHasReproduction ?instanceRep .

	      ?instanceRepAdm adm:adminAbout ?instanceRep .
	      ?instanceRepAdm adm:status bda:StatusReleased .
	      bind( exists {?instanceRepAdm adm:access bda:AccessOpen} as ?instanceAccessOpen)
	      bind( exists {?instanceRep a bdo:ImageInstance} as ?instanceImage)
	      bind( exists {?instanceRep a bdo:EtextInstance} as ?instanceEtext)
	    } group by ?instance 

    }

}
