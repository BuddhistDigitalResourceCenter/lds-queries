#QueryScope=General
#QueryReturnType=Graph
#QueryResults=All resources associated with the given Topic.
#QueryParams=R_RES
#QueryUrl=/lib/topicAllAssociations?R_RES=T132

#param.R_RES.type=resource
#param.R_RES.subtype=a Resource ID
#param.R_RES.desc=the unique resource ID of the referenced topic

PREFIX tmp: <http://purl.bdrc.io/ontology/tmp/>

construct {
  #associated Works
  ?w a ?wT .
  ?w tmp:relationType ?wrel .
  ?w skos:prefLabel ?l .
  ?w adm:license ?lic.
  ?w adm:status ?st .
  ?w adm:access ?acc .
  ?w bdo:workLangScript ?ls.

  ?w adm:license ?rwlic.
  ?w adm:status ?rwst .
  ?w adm:access ?rwacc .
  ?w bdo:workLangScript ?rwls.

  ?w bdo:workType ?wT.
  ?w bdo:workHasRoot ?rw .
  ?w tmp:rootPrefLabel ?rwO .
  #?w bdo:workGenre ?wG .
  #?w bdo:workIsAbout ?wAB .

  #associated Lineages
  ?lin a :Lineage .
  ?lin skos:prefLabel ?ll
}
where {
    #associated Works
  {
      { ?w :workGenre ?R_RES . 
        BIND(:workGenre as ?wrel)
      }
      union
      { ?w :workIsAbout ?R_RES . 
        BIND(:workIsAbout as ?wrel)
      } .
      # we don't want expressions, just the most abstract
      OPTIONAL{
        ?w bdo:workExpressionOf ?wE .
      }
      FILTER (!bound(?wE))
      ?w a ?wT.
      
      optional {
        ?w bdo:workPartOf* ?rw .
        ?rw :isRoot true .
        ?rw skos:prefLabel ?rwO .
        ?resAdm adm:adminAbout ?rw ;
                adm:status ?st .

        optional {
          ?rw :workHasItem ?item .
          ?item a :ItemImageAsset .
          ?itemAdm adm:adminAbout ?item .
          ?itemAdm adm:access ?rootWorkAccess .
          ?itemAdm adm:contentLegal/adm:license ?rootWorkLicence .
        }
      }
      
      ?w skos:prefLabel ?l .
      optional {?w bdo:workLangScript ?ls .}
      optional {?w bdo:workGenre ?wG .}
      optional {
        ?w bdo:workIsAbout ?wAB .
        ?wAB a :Topic .
      }
  }

  #associated Lineages
  union
  {
    ?lin bdo:lineageObject ?R_RES .
    ?lin skos:prefLabel ?ll
  }
}
