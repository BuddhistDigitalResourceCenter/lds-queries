#QueryScope=General
#QueryReturnType=Graph
#QueryResults=All resources preflabel related to the given Resource
#QueryParams=R_RES
#QueryUrl=/lib/allAssocResource?R_RES=bdr:P1583

#param.R_RES.type=resource
#param.R_RES.subtype=a Resource ID
#param.R_RES.desc=the resource we want labels of associates of

prefix oa:     <http://www.w3.org/ns/oa#>

construct {
  ?o skos:prefLabel ?l.
  ?rev ?pp  ?R_RES .
  ?rev skos:prefLabel ?revl .
  ?bno skos:prefLabel ?bnol .
  ?who ?pr ?whol .
  ?rcn ?ppr ?rcl .
  ?tp skos:prefLabel ?tpl .
  ?imA bdo:itemHasVolume ?iV .
  ?imA tmp:itemType ?itemT .
  ?hEx bdo:workHasRoot ?hExW .
  ?hExW skos:prefLabel ?hExO .
  ?R_RES bdo:workHasRoot ?rw .
  ?rw skos:prefLabel ?rwO .
  ?wp bdo:workPartIndex ?wpPi .
  ?wp bdo:workPartType ?wpPt .
  ?o bdo:originalRecord ?ori .
  ?o bdo:contentProvider ?prov .
  ?rs ?rsp ?rso .
  ?ann ?annp ?anno .
  ?annb ?annbp ?annbo .
  ?annbloc ?annblocp ?annbloco .
  ?annblocWork skos:prefLabel ?annblocWorkLabel .
  ?annba ?annbap ?annbao .
  ?annbaloc ?annbalocp ?annbaloco .
  ?annbalocWork skos:prefLabel ?annbalocWorkLabel .
  ?ivol bdo:volumeNumber ?ivolnum .
  ?pRole skos:prefLabel ?pRoleLab .
  ?R_RES tmp:hasEtextVol ?etextvol .
  ?R_RES tmp:hasEtextRes ?etextres .

  ?wDeriv bdo:workLangScript ?wDerivLS .

  ?sameR foaf:name ?sameL .
  ?sameR adm:canonicalHtml ?canonHTML .

  ?o tmp:provider ?legal .
  ?o adm:originalRecord ?orecord .
  ?o adm:canonicalHtml ?canonHTMLo .

  ?legal skos:prefLabel ?customLegalLabel .
}
where {
  {
    {
      ?R_RES ?p ?o .

      # see bdr:WIA_BCA from bdr:W19740
      optional { ?o bdo:originalRecord ?orecord . }
      
      # see mbbt:textT08n0235-transl10 from mbbt:textT08n0235 
      optional { ?o adm:canonicalHtml ?canonHTMLo .         
        # + get legal data label for mbbt (not in ontology)
        optional { 
          ?admdataMB adm:adminAbout ?o ; adm:metadataLegal ?legal . 
          ?legal skos:prefLabel ?customLegalLabel .
        }
      }
      
      #  ?admdata adm:adminAbout ?o .
      optional { ?admdata adm:adminAbout ?o . ?admdata adm:metadataLegal/adm:provider ?legal . }
      optional { ?admdata adm:adminAbout ?o . ?admdata adm:originalRecord ?orecord . }
      optional { ?admdata adm:adminAbout ?o . ?admdata adm:canonicalHtml ?canonHTMLo . }
      
    }

    ?o skos:prefLabel ?l .

    # # deprecated (directly get labels from ontology in client)
    # union
    #{
    #  ?admin adm:adminAbout ?R_RES .
    #  ?admin ?p ?o .
    #  filter( ?p != adm:adminAbout ) .
    #}
    
    # # deprecated (bdr:WIA_BCA)
    # optional {
    #   ?o bdo:contentProvider ?prov .
    #   ?o bdo:originalRecord ?ori .
    # }
  }
  union
  {
   ?pRole :personEvent/:personEventRole ?R_RES .
   ?pRole skos:prefLabel ?pRoleLab
  }
  union
  {
    # reifications related to the main resource (this does not currently fetch the reified statements related to subresources)
    ?rs rdf:subject ?R_RES ;
        ?rsp ?rso .
    ?ann oa:hasTarget ?rs ;
        ?annp ?anno .
    optional {
      ?ann oa:hasBody ?annb .
      ?annb ?annbp ?annbo .
      optional {
        ?annbo a :WorkLocation ;
        BIND(?annbo as ?annbloc )
        ?annbloc ?annblocp ?annbloco .
        ?annbloc :workLocationWork ?annblocWork .
        ?annblocWork skos:prefLabel ?annblocWorkLabel .
      }
      optional {
        ?annbo a adm:Assertion ;
        BIND(?annbo as ?annba )
        ?annba ?annbap ?annbao .
        optional {
           ?annba :workLocation ?annbaloc .
           ?annbaloc ?annbalocp ?annbaloco .
           ?annbaloc :workLocationWork ?annbalocWork .
           ?annbalocWork skos:prefLabel ?annbalocWorkLabel .
        }
      }
    }
  }

  union
  {
    ?rev ?pp  ?R_RES .
    ?rev skos:prefLabel ?revl .
  }
  # etexts
  union
  {
    ?R_RES :volumeNumber ?volNum .
    ?R_RES :volumeOf/:itemForWork/:workHasItem ?voli .
    ?voli a :ItemEtext .
    ?voli :itemHasVolume ?etextvol .
    ?etextvol :volumeNumber ?volNum .
    optional {
      ?etextvol :volumeHasEtext/:eTextResource ?etextres .
      ?etextres a  bdo:EtextPaginated .
    }
  }
  union
  {
    # facets
    ?R_RES ?tmpP ?bn .
    ?bn rdf:type/rdfs:subClassOf+ :Facet .
    ?bn ?bnp ?bno .
    ?bno skos:prefLabel ?bnol .
  }
  union
  {
    # facets
    ?R_RES ?tmpP ?bn .
    ?bn rdf:type/rdfs:subClassOf+ :Event .
    ?bn ?bnp ?bno .
    ?bno skos:prefLabel ?bnol .
  }
  #for Lineage models
  union
  {
    ?R_RES bdo:lineageHolder ?hold .
    ?hold ?pr ?who .
    ?hold rdf:type ?type .
    ?who rdf:type ?tt .
    ?who skos:prefLabel ?whol .
    ?hold bdo:lineageReceived ?rc .
    ?rc ?ppr ?rcn .
    ?rcn skos:prefLabel ?rcl .
  }
  #for Topic models
  union
  {
    ?R_RES rdfs:seeAlso ?tp .
    ?tp skos:prefLabel ?tpl
  }
  #for Work
  union
  {
    ?R_RES bdo:workHasPart ?wp .
    ?wp bdo:workPartIndex ?wpPi .
    optional {?wp bdo:workPartType ?wpPt . } .
  }
  union
  {
    # root work is a parent with no parent
    ?R_RES bdo:workPartOf+ ?rw .
    ?rw :isRoot true .
    ?rw skos:prefLabel ?rwO .
  }
  union
  {
    ?R_RES bdo:workHasItem ?imA .
    ?imA bdo:itemHasVolume ?iV .
    ?imA a ?itemT .
  }
  union
  {
   ?R_RES bdo:itemHasVolume ?ivol .
   ?ivol bdo:volumeNumber ?ivolnum .
  }
  union
  {
    ?R_RES bdo:workHasExpression ?hEx .
    # same as above, root work is a parent with no parent
    ?hEx bdo:workPartOf+ ?hExW .
    ?hExW :isRoot true .
    ?hExW skos:prefLabel ?hExO .
  }
  union
  {
    ?R_RES bdo:workHasDerivative ?wDeriv .
    ?wDeriv bdo:workLangScript ?wDerivLS . 
  }
  union {
    ?R_RES ?sameP ?sameR .
    ?sameP rdfs:subPropertyOf* owl:sameAs .
    optional { ?sameR skos:prefLabel ?sameL } .
    optional { ?sameR foaf:name ?sameL } .
    optional { ?sameR adm:canonicalHtml ?canonHTML } .
  }
}
