#QueryScope=General
#QueryReturnType=Graph
#QueryResults=All works having etext whose chunks contain the given L_NAME parameter value, along with Topic and WorkMainAuthor facets
#QueryParams=L_NAME,LG_NAME
#QueryUrl=/lib/etextContentFacetGraph?L_NAME="de bzhin gshegs"&LG_NAME=bo-x-ewts

#param.L_NAME.type=string
#param.L_NAME.langTag=LG_NAME
#param.L_NAME.isLucene=true
#param.L_NAME.example="ye shes"

construct {
  ?etext tmp:isMain true .
  ?etext skos:prefLabel ?etextL .
  ?etext bdo:eTextHasChunk ?chunk .

  ?chunk bdo:chunkContents ?lit .
  ?chunk bdo:sliceStartChar ?startChar .
  ?chunk bdo:sliceEndChar ?endChar .
  ?chunk tmp:matchScore ?score .
  ?etext tmp:provider ?provider .

  ?etext ?etextp ?etexto .
  
  ?etext tmp:forWork ?w .
  ?w ?wp ?wo .

  ?etext tmp:author ?author .
  ?agent skos:prefLabel ?agentL .

  ?etext tmp:maxScore ?maxScore .
  ?etext tmp:nbChunks ?nbchunks .
}
where
{
  {
    (?chunk ?score ?lit) text:query ( :chunkContents ?L_NAME "highlight:") .
    ?etext bdo:eTextHasChunk ?chunk .
    ?etext bdo:eTextInInstance ?einstance .

    ?eAdm adm:adminAbout ?einstance ;
          adm:status bda:StatusReleased ;
          adm:access bda:AccessOpen .
    FILTER (NOT EXISTS {?eAdm adm:restrictedInChina true.})
    ?w :workHasInstance ?einstance .

    ?chunk bdo:sliceStartChar ?startChar .
    ?chunk bdo:sliceEndChar ?endChar .
    ?eAdm adm:metadataLegal/adm:provider ?provider .
    ?w ?wp ?wo .
    FILTER (?wp IN(skos:altLabel , skos:prefLabel , rdf:type , owl:sameAs , tmp:entityScore))

  } union {

    (?chunk ?score ?lit) text:query ( :chunkContents ?L_NAME "highlight:") .
    ?etext bdo:eTextHasChunk ?chunk .
    VALUES ?etextp { skos:prefLabel bdo:eTextIsVolume }
    ?etext ?etextp ?etexto .

    ?chunk bdo:sliceStartChar ?startChar .
    ?chunk bdo:sliceEndChar ?endChar .

  } union {
    ?chunk text:query ( :chunkContents ?L_NAME ) .
    ?etext bdo:eTextHasChunk ?chunk .
    ?etext bdo:eTextInInstance ?einstance .
    ?eAdm adm:adminAbout ?einstance ;
          adm:status bda:StatusReleased ;
          adm:access bda:AccessOpen .
    FILTER (NOT EXISTS {?eAdm adm:restrictedInChina true.})
    ?w :workHasInstance ?einstance .
    
    ?chunk bdo:sliceStartChar ?startChar .
    ?chunk bdo:sliceEndChar ?endChar .

    ?w bdo:creator ?creator .
    ?creator bdo:role ?role .
    ?creator bdo:agent ?agent .
    ?agent skos:prefLabel ?agentL .
      
    bind( if(?role IN(bdr:R0ER0014 , bdr:R0ER0016 , bdr:R0ER0019 , bdr:R0ER0025), ?agent, 1/0) as ?author)
  } union {

    select ?etext (count (?chunk) as ?nbchunks) (max (?score) as ?maxScore) where {
      (?chunk ?score) text:query ( :chunkContents ?L_NAME) .
      ?etext bdo:eTextHasChunk ?chunk .  
    } group by ?etext 
  }

}
