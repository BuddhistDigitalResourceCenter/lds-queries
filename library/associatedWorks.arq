#QueryScope=General
#QueryReturnType=Graph
#QueryResults=All works whose various literals contain the given L_NAME parameter value, along with their LICENSE + ACCESS + LANGSCRIPT + STATUS facets.
#QueryParams=R_RES
#QueryUrl=/lib/associatedWorks?R_RES=bdr:W19740

#param.R_RES.type=resource
#param.R_RES.subtype=a Resource ID
#param.R_RES.desc=the unique resource ID of the referenced entity

PREFIX tmp: <http://purl.bdrc.io/ontology/tmp/>

CONSTRUCT
{
    ?res tmp:status ?st .
    ?res tmp:matchScore ?sc .
    ?res tmp:labelMatch ?labelMatch.
    ?res tmp:isMain true .

    ?res tmp:nbInstance ?nbinstances .
    ?res tmp:provider ?provider .
    ?res tmp:originalRecord ?originalRecord .
    ?res tmp:hasOpen ?hasopen .
    ?res tmp:hasImage ?hasimage .
    ?res tmp:hasEtext ?hasetext .
    ?res tmp:relationType ?rel1 .
    ?res tmp:relationType ?rel2 .
    ?res tmp:relationType ?rel3 .
  
    ?res ?resp ?reso .
    ?res ?respp ?resoo .
 
    ?res tmp:author ?author .
    ?agent skos:prefLabel ?agentL .
  
    ?resoo skos:prefLabel ?ol .

}
WHERE 
{
  # We have the following ways a work can be related to another thing:
  #  - direct relation to/from
  #  - work has creator R_RES
  {
    {
      ?R_RES ?rel1 ?res .
      ?res a/rdfs:subClassOf* bdo:Work .
    } union {
      ?res ?rel2 ?R_RES .
      ?res a/rdfs:subClassOf* bdo:Work .
    } union {
      ?res bdo:creator/bdo:agent ?R_RES . 
      BIND(bdo:creator as ?rel3)
    }
    
    #VALUES ?resp {bdo:language skos:altLabel skos:prefLabel rdf:type owl:sameAs tmp:entityScore}
    ?res ?resp ?reso .
    FILTER (?resp IN(bdo:language , skos:altLabel , skos:prefLabel , rdf:type , owl:sameAs , tmp:entityScore))
    ?resAdm adm:adminAbout ?res .
    ?resAdm adm:status ?st .
    ?resAdm adm:metadataLegal/adm:provider ?provider .
    
  } union {
    
    {
      ?R_RES ?rel1 ?res .
      ?res a/rdfs:subClassOf* bdo:Work .
    } union {
      ?res ?rel2 ?R_RES .
      ?res a/rdfs:subClassOf* bdo:Work .
    } union {
      ?res bdo:creator/bdo:agent ?R_RES .
      BIND(bdo:creator as ?rel3)
    }
    
    ?res bdo:creator ?creator .
    ?creator bdo:role ?role .
    ?creator bdo:agent ?agent .
    ?agent skos:prefLabel ?agentL .
    
    bind( if(?role IN(bdr:R0ER0014 , bdr:R0ER0016 , bdr:R0ER0019 , bdr:R0ER0025), ?agent, 1/0) as ?author)

  } union {
    
    {
      ?R_RES ?rel1 ?res .
      ?res a/rdfs:subClassOf* bdo:Work .
    } union {
      ?res ?rel2 ?R_RES .
      ?res a/rdfs:subClassOf* bdo:Work .
    } union {
      ?res bdo:creator/bdo:agent ?R_RES .
      BIND(bdo:creator as ?rel3)
    }
    
    ?res ?respp ?resoo .
    FILTER(?respp IN(bdo:serialMemberOf , bdo:workIsAbout , bdo:workGenre))
    ?resoo skos:prefLabel ?ol .

  } union {
    
    select ?res 
           (sum (?isRootInstance) as ?nbinstances) 
           (count (?instance) as ?nbinstance) 
           (max(?instanceAccessOpen) as ?hasopen) 
           (max(?instanceImage) as ?hasimage) 
           (max(?instanceEtext) as ?hasetext) 
    where {
      
      {
        ?R_RES ?rel1 ?res .
        ?res a/rdfs:subClassOf* bdo:Work .
      } union {
        ?res ?rel2 ?R_RES .
        ?res a/rdfs:subClassOf* bdo:Work .
      } union {
        ?res bdo:creator/bdo:agent ?R_RES .
      }

      ?res bdo:workHasInstance/bdo:inRootInstance? ?instance .
      ?instanceAdm adm:adminAbout ?instance .
      ?instanceAdm adm:status bda:StatusReleased .
      bind( if (exists {?instance bdo:instanceReproductionOf ?reprodof}, 0, 1) as ?isRootInstance)
      bind( exists {?instanceAdm adm:access bda:AccessOpen} as ?instanceAccessOpen)
      bind( exists {?instance a bdo:ImageInstance} as ?instanceImage)
      bind( exists {?instance a bdo:EtextInstance} as ?instanceEtext)
    } group by ?res 
  }
}
