#QueryScope=General
#QueryReturnType=Graph
#QueryResults=A small list of entities matching L_NAME (only the most relevant ones)
#QueryParams=L_NAME,LG_NAME
#QueryUrl=/lib/imLuckySearchGraph?L_NAME="'od zer"&LG_NAME=bo-x-ewts

#param.L_NAME.type=string
#param.L_NAME.langTag=LG_NAME
#param.L_NAME.isLucene=true
#param.L_NAME.example="'od zer"

PREFIX tmp: <http://purl.bdrc.io/ontology/tmp/>

CONSTRUCT
{
    ?res tmp:status bda:StatusReleased .
    ?res tmp:match ?match.
    ?res tmp:isMain true .
    ?res bdo:language ?language .
    ?res tmp:provider ?provider .
    ?res skos:prefLabel ?resL .
    ?res tmp:entityScore ?eScore .
}
WHERE 
{
  {
    select 
       ?res ?sc ?match ?eScore ?type ?provider
    where {
          (?name ?sc ?match) text:query ( rdfs:label ?L_NAME "highlight:" ) .
           ?res bdo:personName ?name .
           #?res skos:prefLabel ?resL .
           ?res tmp:entityScore ?eScore .
           VALUES ?resp {bdo:language}
           ?res ?resp ?lang .
           ?resAdm adm:adminAbout ?res .
           ?resAdm adm:status bda:StatusReleased .
           ?resAdm adm:metadataLegal/adm:provider ?provider .
           BIND(bdo:Person as ?type)
    } order by desc(?eScore) desc(?sc) limit 10 
  } union {
    select 
       ?res ?sc ?match ?eScore ?type ?provider ?language
    where {
          (?res ?sc ?match) text:query ( bdo:skosLabels ?L_NAME "highlight:" ) .
           ?res a ?type .
           ?type rdfs:subClassOf+ bdo:Entity .
           #?res skos:prefLabel ?resL .
           ?res tmp:entityScore ?eScore .
           ?res ?resp ?reso .
           BIND(IF(?resp = bdo:language, ?reso, 1/0) as ?lang)
           ?resAdm adm:adminAbout ?res .
           ?resAdm adm:status bda:StatusReleased .
           ?resAdm adm:metadataLegal/adm:provider ?provider .
    } order by desc(?eScore) desc(?sc) limit 10 
  }
  ?res skos:prefLabel ?resL .
}
