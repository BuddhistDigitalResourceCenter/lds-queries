#QueryScope=General
#QueryReturnType=Graph
#QueryResults=All resources associated with the given Work.
#QueryParams=R_RES
#QueryUrl=/lib/topicAllAssociations?R_RES=W19740

#param.R_RES.type=resource
#param.R_RES.subtype=a Resource ID
#param.R_RES.desc=the unique resource ID of the referenced work

PREFIX tmp: <http://purl.bdrc.io/ontology/tmp/>

construct {
  #associated Works
  ?w a :Work .
  ?w skos:prefLabel ?l .
  ?w adm:license ?lic.
  ?w adm:status ?st .
  ?w adm:access ?acc .
  ?w bdo:workLangScript ?ls.

  ?w adm:license ?rwlic.
  ?w adm:status ?rwst .
  ?w adm:access ?rwacc .
  ?w bdo:workLangScript ?rwls.
  ?w bdo:workHasRoot ?rw .
  ?w bdo:workType ?wT .
  ?w bdo:workGenre ?wG .
  ?w tmp:relationType ?rel .

  ?w bdo:workType ?wT.
  ?w bdo:workHasRoot ?rw .
  ?w tmp:rootPrefLabel ?rwO .

  #associated Lineages
  ?lin a :Lineage .
  ?lin skos:prefLabel ?ll
}
where {
    #associated Works
  {
      ?w :workIsAbout ?R_RES .
      BIND(:workIsAbout as ?rel)
      # we don't want expressions, just the most abstract
      OPTIONAL{
        ?w bdo:workExpressionOf ?wE .
      }
      FILTER (!bound(?wE))
      ?w skos:prefLabel ?l .
      optional {?w adm:license ?lic .}
      optional {?w adm:status ?st .}
      optional {?w adm:access ?acc .}
      optional {?w bdo:workLangScript ?ls .}
      optional {?w bdo:workType ?wT .}
      optional {?w bdo:workGenre ?wG .}
      # we could fetch dates, but our data is almost only publishing date, which is not that interesting
      #optional {
      #  ?w bdo:workEvent ?we .
      #  ?we a ?wet .
      #  FILTER (?wet = bdo:CompletedEvent || ?wet = bdo:TranslatedEvent || ?rwet = bdo:PublishedEvent)
      #  optional { ?we :notAfter ?wena . }
      #  optional { ?we :notBefore ?wenb . }
      #  optional { ?we :onYear ?wenoy . }
      #}

      optional {
        ?w bdo:workPartOf+ ?rw .
        optional { ?rw bdo:workPartOf ?rwP }
        FILTER (!bound(?rwP))
        ?rw skos:prefLabel ?rwO .
        optional {?rw adm:license ?rwlic .}
        optional {?rw adm:status ?rwst .}
        optional {?rw adm:access ?rwacc .}
        optional {?rw bdo:workLangScript ?rwls .}
      }
  }
  #associated Lineages
  union
  {
    ?lin bdo:lineageObject ?R_RES .
    ?lin skos:prefLabel ?ll
  }
}
