#QueryScope=General
#QueryReturnType=Graph
#QueryResults=All core resources whose various names contain the given L_NAME parameter value
#QueryParams=L_NAME,LG_NAME
#QueryUrl=/RootSearchGraph?L_NAME="'od zer"&LG_NAME=bo-x-ewts

#param.L_NAME.type=string
#param.L_NAME.langTag=LG_NAME
#param.L_NAME.isLucene=true
#param.L_NAME.example="ye shes"

PREFIX tmp: <http://purl.bdrc.io/ontology/tmp/>

CONSTRUCT
  {
    ?TT a ?type .
    ?TT ?pp ?lit .
    ?TT skos:prefLabel ?l.
    ?TT tmp:matchScore ?sc .
    ?TT tmp:prefLabelMatch ?lit1.
    ?TT tmp:altLabelMatch ?lit2.
    
    ?TT bdo:workType ?wT .

    ?TT bdo:workPartType ?wPT.
    ?TT bdo:workHasPart ?wHP.
    ?TT bdo:workExpressionOf ?wE.
    ?TT tmp:prefLabelExpressionOf ?litE.
    ?TT ?wE ?litE.
    #?TT tmp:prefLabelExpressionOfMatch ?litEH.
    ?TT bdo:workHasExpression ?wH.
    ?TT tmp:prefLabelHasExpression ?litH.
    ?TT ?wH ?litH.
    #?TT tmp:prefLabelHasExpressionMatch ?litHH.

    #?TT bdo:workTranslationOf ?wTr.
    #?TT bdo:workHasTranslation ?wHTr.

    ?TT ?eventType ?lit .

    ?TT tmp:creatorLabel ?litC .
    ?TT tmp:creatorRole ?roleLabel .

    ?TT owl:sameAs ?same .
    ?TT ?same ?sameL .
    ?TT owl:sameAs ?sameBDRC .
    ?TT ?sameBDRC ?sameBDRClabel .
    ?TT a ?sameT .
    ?TT adm:canonicalHtml ?sameCanonHTML .
    ?TT adm:canonicalHtml ?canonHTML .

    ?TT skos:prefLabel ?sameL.
    ?TT skos:prefLabel ?sameBDRClabel.

    ?TT adm:status ?status .

  }
WHERE {

  {
    (?s ?sc ?lit) text:query ( rdfs:label ?L_NAME "highlight:" ).
    {
      ?TT ?anyprop ?anypropobj .       
      ?anypropobj :eventWho ?s ; a ?eventType .
    } 
    union 
    {
      ?TT ?p ?s.
      FILTER(!EXISTS { ?TT :eventWho ?anywho })
      ?s rdf:type ?pp .
    }

  }
  union
  { 
    (?s ?sc ?litC) text:query ( skos:prefLabel ?L_NAME "highlight:").
    ?TT bdo:creator ?agent .
    ?agent bdo:agent ?s ; bdo:role ?creaRole .
    ?creaRole skos:prefLabel ?roleLabel . 
  }
  union
  {
    (?TT ?sc ?lit2) text:query ( skos:altLabel ?L_NAME "highlight:" ).
  }
  union
  {
    (?TT ?sc ?lit1) text:query ( skos:prefLabel ?L_NAME "highlight:" ).
  }

  ?TT rdf:type ?type .  

  OPTIONAL{?TT skos:prefLabel ?l.}.

  optional { ?TT adm:canonicalHtml ?canonHTML } .

  optional { 
    ?TT bdo:workPartOf* ?res .
    ?adm adm:adminAbout ?res ; adm:status ?status . 
  }





  # --------------------------------------- case :RES sameAs :A when there is no :A record
  optional
  { 
    ?TT owl:sameAs+ ?same .
    ?TT a ?sameT . 
    ?sameT rdfs:subClassOf+ bdo:Entity . 
  }
  # duplicate from above with sameCanonHtml
  optional
  { 
    ?TT owl:sameAs+ ?same .
    ?TT a ?sameT . 
    ?sameT rdfs:subClassOf+ bdo:Entity . 

    ?same adm:canonicalHtml ?sameCanonHTML . 
  }

  # --------------------------------------- case :RES sameAs :A when :A has a prefLabel or foaf:name
  optional
  { 
    ?TT owl:sameAs+ ?same .
    ?TT a ?sameT . 
    ?sameT rdfs:subClassOf+ bdo:Entity . 

    { ?same skos:prefLabel ?sameL . } 
    union
    { ?same foaf:name ?sameL . }  
  }
  # duplicate from above with sameCanonHtml
  optional
  { 
    ?TT owl:sameAs+ ?same .
    ?TT a ?sameT . 
    ?sameT rdfs:subClassOf+ bdo:Entity . 

    { ?same skos:prefLabel ?sameL . } 
    union
    { ?same foaf:name ?sameL . }  
    
    ?same adm:canonicalHtml ?sameCanonHTML . 
  }

  # --------------------------------------- case :A sameAs :RES when there is no :A record

  optional
  { 
    ?sameBDRC owl:sameAs+ ?TT ; owl:sameAs+ ?same .
    ?sameBDRC a ?sameT . 
    ?sameT rdfs:subClassOf+ bdo:Entity . 
  }  
  # duplicate from above with sameCanonHtml
  optional
  { 
    ?sameBDRC owl:sameAs+ ?TT ; owl:sameAs+ ?same .
    ?sameBDRC a ?sameT . 
    ?sameT rdfs:subClassOf+ bdo:Entity . 

    ?same adm:canonicalHtml ?sameCanonHTML . 
  }

  # --------------------------------------- case :A sameAs :RES when :A has a prefLabel or foaf:name
  optional
  { 
    ?sameBDRC owl:sameAs+ ?TT ; owl:sameAs+ ?same .
    ?sameBDRC a ?sameT . 
    ?sameT rdfs:subClassOf+ bdo:Entity . 

    { ?sameBDRC skos:prefLabel ?sameBDRClabel . } 
    union
    { ?sameBDRC foaf:name ?sameBDRClabel . } 
    
    { ?same skos:prefLabel ?sameL . }     
    union
    { ?same foaf:name ?sameL . } 
  }  
  # duplicate from above with sameCanonHtml
  optional
  { 
    ?sameBDRC owl:sameAs+ ?TT ; owl:sameAs+ ?same .
    ?sameBDRC a ?sameT . 
    ?sameT rdfs:subClassOf+ bdo:Entity . 

    { ?sameBDRC skos:prefLabel ?sameBDRClabel . } 
    union
    { ?sameBDRC foaf:name ?sameBDRClabel . } 
    
    { ?same skos:prefLabel ?sameL . }     
    union
    { ?same foaf:name ?sameL . } 

    ?same adm:canonicalHtml ?sameCanonHTML . 
  }







  OPTIONAL{?TT bdo:workPartType ?wPT. }
  OPTIONAL{?TT bdo:workHasPart ?wHP. }
  #?TT bdo:workType bdr:WorkTypeAbstractWork.}.
  OPTIONAL{
    ?TT bdo:workExpressionOf ?wE.
    ?wE skos:prefLabel ?litE.
    #OPTIONAL{
    #  (?wE ?scE ?litEH) text:query ( skos:prefLabel ?L_NAME "highlight:").
    #}
   }.
  OPTIONAL{
    ?TT bdo:workHasExpression ?wH.
    ?wH skos:prefLabel ?litH.
    #OPTIONAL{
    #   (?wH ?scH ?litHH) text:query ( skos:prefLabel ?L_NAME "highlight:").
    #}
  }.
 # Good idea but translation property is totally unused... yet ?
 # OPTIONAL{
 #   ?TT bdo:workTranslationOf ?wTr.
 #   ?wTr skos:prefLabel ?litTr.
 #   OPTIONAL{
 #     (?wTr ?scTr ?litTrH) text:query ( skos:prefLabel ?L_NAME "highlight:").
 #   }
 #  }.
 #  OPTIONAL{
 #   ?TT bdo:workHasTranslation ?wHTr.
 #   ?wHTr skos:prefLabel ?litHTr.
 #   OPTIONAL{
 #     (?wHTr ?scHTr ?litHTrH) text:query ( skos:prefLabel ?L_NAME "highlight:").
 #   }
 # }.
}
order by desc(?sc)
