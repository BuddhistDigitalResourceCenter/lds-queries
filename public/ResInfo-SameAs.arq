#QueryScope=General
#QueryReturnType=Graph
#QueryResults=A graph for the given resource.
#QueryParams=R_RES
#QueryUrl=/ResInfo-SameAs?R_RES=bdr:P360

#param.R_RES.type=resource
#param.R_RES.subtype=a Resource ID
#param.R_RES.desc=the unique resource ID of the chosen resource

construct {
 ?r ?rp ?ro .
 ?ro2 ?ro2p ?ro2o .
 ?ro3 ?ro3p ?ro3o .
 ?ro3o ?ro4p ?ro4o .
 ?ro5o ?ro6p ?ro6o .

 ?q ?qp ?qo .
 ?r tmp:hasAdminData ?q .

 ?r owl:sameAs ?sameA .
 ?r owl:sameAs ?sameB .

 ?r tmp:siblingInstances ?sibling .

 ?ro tmp:withSameAs ?roSame .
 ?ro tmp:withSameAs ?roSame2 .

 ?ro skos:prefLabel ?roLabel .
 ?roTCL ?roTCLp ?roTCLo .

} where {

  { ?r owl:sameAs* ?R_RES . }
  union
  { ?R_RES owl:sameAs* ?r . }

  optional { ?r owl:sameAs+ ?sameA . } 
  optional { ?sameB owl:sameAs+ ?r . }

  {
    ?r ?rp ?ro .
    optional {
      ?ro owl:sameAs+ ?roSame .
    }
    optional {
      ?roSame2 owl:sameAs+ ?ro .
    }
    optional {
      ?r ?rp ?ro .
      ?ro skos:prefLabel ?roLabel .
    }
  } union {
    ?r ?rp2 ?ro2 .
    ?ro2 rdf:type/rdfs:subClassOf+ :Facet .
    ?ro2 ?ro2p ?ro2o .
  } union {
    ?r ?rp3 ?ro3 .
    ?ro3 rdf:type/rdfs:subClassOf+ :Event .
    ?ro3 ?ro3p ?ro3o .
    optional {
      ?ro3o rdf:type/rdfs:subClassOf+ :Facet .
      ?ro3o ?ro4p ?ro4o .
    } 
    optional {
      ?ro3o a bdo:DateIndication .
      ?ro3o ?ro4p ?ro4o .
    }
  } union {
    ?r ?rp5 ?ro5 .
    ?ro5 ?ro5p ?ro5o .
    ?ro5o rdf:type/rdfs:subClassOf+ :Event .
    ?ro5o ?ro6p ?ro6o .
  } union {
    ?q adm:adminAbout ?r .
    ?q ?qp ?qo .
    # we don't return all the adminAbout, they can be in large quantities
    FILTER(?qp != adm:adminAbout)
  } union {
    ?parent bdo:workHasInstance ?r ; bdo:workHasInstance ?sibling .
    filter( str(?r) != str(?sibling) ) .
  } union {
    ?r ?rpTCL ?roTCL .
    { ?roTCL a :Title . } union { ?roTCL a :ContentLocation }
    ?roTCL ?roTCLp ?roTCLo .
  }
}
